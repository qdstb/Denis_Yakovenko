# #Реализовать:
# 1.текстовый вывод текущего времени
# 2.текстовый вывод времени, введённого с консоли (пользователь должен вводить данные в формате hh:mm).
# Дать пользователю возможность выбрать режим работы программы, время выводить числительными на русском языке.

# Для получения текущего времени использовать модуль datetime.

# min == 0: такое-то значение часа ровно (15:00 - три часа ровно)
# min < 30: столько-то минут следующего часа (19:12 - двенадцать минут восьмого)
# min == 30: половина такого-то (15:30 - половина четвёртого)
# min > 30 and min < 45 столько-то минут следующего часа (12:38 - тридцать восемь минут первого)
# min >= 45 без min такого-то (08:54 - без шести минут девять)

from datetime import datetime

d_mins = {
00: "ровно",
 1: "одна минута",
 2: "две минуты",
 3: "три минуты",
 4: "четыре минуты",
 5: "пять минут",
 6: "шесть минут",
 7: "семь минут",
 8: "восемь минут",
 9: "девять минут",
 10: "десять минут",
 11: "одинадцать минут",
 12: "двенадцать минут",
 13: "тринадцать минут",
 14: "четырнадцать минут",
 15: "пятнадцать минут",
 16: "шестнадцать минут",
 17: "семнадцать минут",
 18: "восемнадцать минут",
 19: "девятнадцать минут",
 20: "двадцать минут",
 21: "двадцать одна минута",
 22: "двадцать две минуты",
 23: "двадцать три минуты",
 24: "двадцать четыре минуты",
 25: "двадцать пять минут",
 26: "двадцать шесть минут",
 27: "двадцать семь минут",
 28: "двадцать восемь минут",
 29: "двадцать девять минут",
 31: "тридцать одна минута",
 32: "тридцать две минуты",
 33: "тридцать три минуты",
 34: "тридцать четыре минуты",
 35: "тридцать пять минут",
 36: "тридцать шесть минут",
 37: "тридцать семь минут",
 38: "тридцать восемь минут",
 39: "тридцать девять минут",
 40: "сорок минут",
 41: "сорок одна минута",
 42: "сорок две минуты",
 43: "сорок три минуты",
 44: "сорок четыре минуты",
 45: "без пятнадцати минут",
 46: "без четырнадцати минут",
 47: "без тринадцати минут",
 48: "без двенадцати минут",
 49: "без одинадцати минут",
 50: "без десяти минут",
 51: "без девяти минут",
 52: "без восеми минут",
 53: "без семи минут",
 54: "без шести минут",
 55: "без пяти минут",
 56: "без четырех минут",
 57: "без трех минут",
 58: "без двух минут",
 59: "без одной минуты",
 30: "половина"
 }
d_hours = {
 00: "первого",
 1: "второго",
 2: "третьего",
 3: "четвертого",
 4: "пятого",
 5: "шестого",
 6: "седьмого",
 7: "восьмого",
 8: "девятого",
 9: "десятого",
 10: "одинадцатого",
 11: "двенадцатого",
 12: "первого",
 13: "второго",
 14: "третьего",
 15: "четвертого",
 16: "пятого",
 17: "шестого",
 18: "седьмого",
 19: "восьмого",
 20: "девятого",
 21: "десятого",
 22: "одинадцатого",
 23: "двенадцатого",
}
d_hours_sharp = {
 1: "один час",
 2: "два часа",
 3: "три часа",
 4: "четыре часа",
 5: "пять часов",
 6: "шесть часов",
 7: "семь часов",
 8: "восемь часов",
 9: "девять часов",
 10: "десять часов",
 11: "одинадцать часов",
 12: "двенадцать часов",
 13: "один час",
 14: "два часа",
 15: "три часа",
 16: "четыре часа",
 17: "пять часов",
 18: "шесть часов",
 19: "семь часов",
 20: "восемь часов",
 21: "девять часов",
 22: "десять часов",
 23: "одинадцать часов",
 00: "полночь"
}
d_hours_45 = {
 1: "два",
 2: "три",
 3: "четыре",
 4: "пять",
 5: "шесть",
 6: "семь",
 7: "восемь",
 8: "девять",
 9: "десять",
 10: "одинадцать",
 11: "двенадцать",
 12: "час",
 13: "два",
 14: "три",
 15: "четыре",
 16: "пять",
 17: "шесть",
 18: "семь",
 19: "восемь",
 20: "девять",
 21: "десять",
 22: "одинадцать",
 23: "двенадцать"
}
while True:
    type_of_work = input("Please enter the type of program operation: current time(c) or your time (t):\n")

    if len(type_of_work) != 1:
        print("Please use only one symbol: (c) or (t)\n")
        continue
    if type_of_work[0] != 'c' and type_of_work[0] !="t":
        print("Please use only: (c) or (t)\n")
        continue
    if type_of_work[0] == "c":
        now = datetime.now().time()
        current_time = [now.hour, now.minute]
        text_time_hours = d_hours[current_time[0]]
        text_time_mins = d_mins[current_time[1]]
        if current_time[1] >=45:
                text_time_hours = d_hours_45[current_time[0]]
                text_time_mins = d_mins[current_time[1]]
                print(text_time_mins, text_time_hours)
                break 
        if current_time[1] == 00:
            text_time_hours = d_hours_sharp[current_time[0]]
            text_time_mins = d_mins[current_time[1]]
        print(text_time_mins, text_time_hours)
        break
    if type_of_work == "t":
        while True:
            user_input_time = input("Please enter your time in format hh:mm\n")
            if len(user_input_time) != 5:
                print("Your time is in incorrect format, the length is wrong")
                continue

            if user_input_time[2] != ":":
                print("The data is in incorrect format, ':' is mnissing")
                continue
            u_inp = user_input_time.split(":")
            Fail = False
            for i, part in enumerate(u_inp):
                if not part.isnumeric():
                    Fail = True
                    break
                u_inp[i] = int(part)     
            if Fail:
                print("The data is in incorrect format, you must only use digits")
                continue
            if u_inp[0] >=24:
                 print("The hours value must be less then 24")
                 continue
            if u_inp[1] >59:
                 print("The minutes value must be less then 60")
                 continue
            text_time_hours = d_hours[u_inp[0]]
            text_time_mins = d_mins[u_inp[1]]
            if u_inp[1] >=45:
                text_time_hours = d_hours_45[u_inp[0]]
                text_time_mins = d_mins[u_inp[1]]
                print(text_time_mins, text_time_hours)
                break 
            if u_inp[1] == 00:
                 text_time_hours = d_hours_sharp[u_inp[0]]
                 text_time_mins = d_mins[u_inp[1]]
            print(text_time_mins, text_time_hours)
            break    
        break    

